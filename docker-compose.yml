version: "3.8"
services:
  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    container_name: db-postgres
    ports:
      - 5435:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  redis:
    container_name: fastapi_project_redis
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 200

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - 8081:8081
    depends_on:
      - redis



  app:
    build:
      context: .
    container_name: fastapi_app
    command: ["/fastapi_app/docker/app.sh"]
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  tests:
    build:
      context: .
    container_name: tests
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    command: ["/fastapi_app/docker/run_tests.sh"]
